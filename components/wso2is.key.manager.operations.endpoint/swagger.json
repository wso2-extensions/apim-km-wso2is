{
  "swagger" : "2.0",
  "info" : {
    "description" : "This document specifies a **RESTful API** to access user information .\n\nIt is written with [swagger 2](http://swagger.io/).\n",
    "version" : "1.0.0",
    "title" : "WSO2 Rest API - User Information",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "apim.wso2.com",
  "basePath" : "/t/{tenant-domain}/keymanager-operations",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/user-info/claims" : {
      "get" : {
        "tags" : [ "User Claims" ],
        "summary" : "Register user\n",
        "description" : "This API is used to get user claims.\n",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "User name\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "query",
          "description" : "Domain of the user.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dialect",
          "in" : "query",
          "description" : "Dialect URI for the claims.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Claims returned.",
            "schema" : {
              "$ref" : "#/definitions/ClaimList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user-info/claims/generate" : {
      "post" : {
        "tags" : [ "User Claims" ],
        "summary" : "Register user\n",
        "description" : "This API is used to get user claims.\n",
        "parameters" : [ {
          "in" : "body",
          "name" : "properties",
          "description" : "Additional parameters that can be used to generate claims.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClaimRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Claims returned.",
            "schema" : {
              "$ref" : "#/definitions/ClaimList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dcr/register" : {
      "post" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "Registers an OAuth2 application\n",
        "description" : "If you want to register an OAuth2 application with a specified client_id and secret, check the sample request given below.\n",
        "operationId" : "registerApplication",
        "parameters" : [ {
          "in" : "body",
          "name" : "RegistrationRequest",
          "description" : "Application information to register.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RegistrationRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -k -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H\n\"Content-Type: application/json\" -d '{\n \"client_name\": \"application_test\",\n \"grant_types\": [\"password\"],\n \"ext_param_client_id\":\"provided_client_id0001\",\n \"ext_param_client_secret\":\"provided_client_secret0001\",\n \"grant_types\": [\"password\"],\n \"ext_application_owner\": \"admin\" }'\n\"https://localhost:9443/keymanager-operations/dcr/register\"\n",
        "x-wso2-response" : "\"HTTP/1.1 201 Created\"\n{\"client_name‚Äù:\"application_test\",\n\"client_id\":\"provided_client_id0001\",\n\"client_secret\":\"provided_client_secret0001\",\n\"redirect_uris\":[\"\"]\n\"grant_types\": [\"password\"],\n\"ext_application_owner\": \"admin\"}\n"
      }
    },
    "/dcr/register/{client_id}" : {
      "get" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "Get OAuth2 application information\n",
        "description" : "This API is used to get/retrieve an OAuth2 application by client_id.\n",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Unique identifier of the OAuth2 client application.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "decodeKey",
          "in" : "query",
          "description" : "Describe whether the consumer key should be decoded or not",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully Retrieved",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -X GET -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\" -d '{}' \"https://localhost:9443/keymanager-operations/dcr/register/s6BhdRkqt3\"\n",
        "x-wso2-response" : "\"HTTP/1.1 200 OK\"\n{ \"client_id\": \"s6BhdRkqt3\",\n\"client_secret\":\"ZJYCqe3GGRvdrudKyZS0XhGv_Z45DuKhCUk0gBR1vZk\",\n\"client_secret_expires_at\": 1577858400,\n\"redirect_uris\":[\"https://client.example.org/callback\"],\n\"client_name\":\"application_owner_application_1\",\n\"grant_types\": [\"password\"],\n\"ext_application_owner\": \"admin\"}\n"
      },
      "put" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "Updates an OAuth2 application\n",
        "description" : "This API is used to update an OAuth2 application.\n",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "in" : "body",
          "name" : "updateRequest",
          "description" : "Application information to update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateRequest"
          }
        }, {
          "name" : "client_id",
          "in" : "path",
          "description" : "Unique identifier for the OAuth2 client application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -X PUT -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H\n\"Content-Type: application/json\" -d '{\n  \"redirect_uris\":[\"https://client.example.org/callback\"],\n  \"client_name\": \"application_1\",\n  \"grant_types\": [\"password\"],\n  \"ext_application_owner\": \"admin\" }'\n\"https://localhost:9443/keymanager-operations/dcr/register\"\n",
        "x-wso2-response" : "\"HTTP/1.1 200 OK\"\n{ \"client_id\": \"s6BhdRkqt3\",\n\"client_secret\":\"ZJYCqe3GGRvdrudKyZS0XhGv_Z45DuKhCUk0gBR1vZk\",\n\"client_secret_expires_at\": 1577858400,\n\"redirect_uris\":[\"https://client.example.org/callback\"],\n\"client_name\":\"application_owner_application_1\",\n\"grant_types\": [\"password\"],\n\"ext_application_owner\": \"admin\" }\n"
      },
      "delete" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "Delete OAuth2 application\n",
        "description" : "This API is used to delete an OAuth2 application by client_id.\n",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Unique identifier of the OAuth2 client application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted"
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -X DELETE -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\" -d '{}' \"https://localhost:9443/keymanager-operations/dcr/register/s6BhdRkqt3\"\n",
        "x-wso2-response" : "\"HTTP/1.1 204 No Content\"\n"
      }
    },
    "/dcr/register/{clientId}/change-owner" : {
      "post" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "Change Application Owner",
        "description" : "This operation is used to change the owner of an Application.\n",
        "operationId" : "changeApplicationOwner",
        "parameters" : [ {
          "name" : "applicationOwner",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clientId",
          "in" : "path",
          "description" : "Unique identifier of the OAuth2 client application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -k -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H\n        \"Content-Type: application/json\" -d '{\n         \"ext_application_owner\": \"admin\"}'\n        \"https://localhost:9443/keymanager-operations/dcr/change-owner?client_id=s6BhdRkqt3\"\n",
        "x-wso2-response" : "HTTP/1.1 200 OK"
      }
    },
    "/dcr/register/{clientId}/regenerate-consumer-secret" : {
      "post" : {
        "tags" : [ "OAuth2 DCR" ],
        "summary" : "update the oauth secret key",
        "description" : "This operation is used to update the oauth secret key\n",
        "operationId" : "regenerateConsumerSecret",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "path",
          "description" : "Unique identifier of the OAuth2 client application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-wso2-request" : "curl -k -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H\n        \"Content-Type: application/json\"\n        \"https://localhost:9443/keymanager-operations/dcr/re-generate-consumer-secret?client_id=s6BhdRkqt3\"\n",
        "x-wso2-response" : "HTTP/1.1 200 OK"
      }
    }
  },
  "definitions" : {
    "Claim" : {
      "type" : "object",
      "properties" : {
        "uri" : {
          "type" : "string",
          "example" : "http://wso2.org/claims/givenname",
          "description" : "Claim URI."
        },
        "value" : {
          "type" : "string",
          "example" : "John",
          "description" : "Value for the claim."
        }
      }
    },
    "ClaimList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of claims returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Claim"
          }
        }
      },
      "title" : "Claim List"
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ClaimRequest" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "accessToken" : {
          "type" : "string"
        },
        "dialect" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "bindFederatedUserClaims" : {
          "type" : "boolean"
        }
      }
    },
    "RegistrationRequest" : {
      "type" : "object",
      "required" : [ "client_name", "redirect_uris" ],
      "properties" : {
        "redirect_uris" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "client_name" : {
          "type" : "string"
        },
        "client_id" : {
          "type" : "string"
        },
        "client_secret" : {
          "type" : "string"
        },
        "grant_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "application_type" : {
          "type" : "string"
        },
        "token_type_extension" : {
          "type" : "string"
        },
        "ext_application_owner" : {
          "type" : "string"
        },
        "ext_application_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_user_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_refresh_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_id_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jwks_uri" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "ext_param_client_id" : {
          "type" : "string"
        },
        "ext_param_client_secret" : {
          "type" : "string"
        },
        "contacts" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "post_logout_redirect_uris" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "request_uris" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "response_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ext_param_sp_template" : {
          "type" : "string"
        },
        "backchannel_logout_uri" : {
          "type" : "string"
        },
        "backchannel_logout_session_required" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateRequest" : {
      "type" : "object",
      "properties" : {
        "redirect_uris" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "client_name" : {
          "type" : "string"
        },
        "client_id" : {
          "type" : "string"
        },
        "client_secret" : {
          "type" : "string"
        },
        "grant_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "token_type_extension" : {
          "type" : "string"
        },
        "ext_application_owner" : {
          "type" : "string"
        },
        "backchannel_logout_uri" : {
          "type" : "string"
        },
        "backchannel_logout_session_required" : {
          "type" : "boolean"
        },
        "ext_application_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_user_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_refresh_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_id_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Application" : {
      "type" : "object",
      "properties" : {
        "client_id" : {
          "type" : "string"
        },
        "client_secret" : {
          "type" : "string"
        },
        "client_secret_expires_at" : {
          "type" : "string"
        },
        "redirect_uris" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "client_name" : {
          "type" : "string"
        },
        "grant_types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ext_application_owner" : {
          "type" : "string"
        },
        "ext_application_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_user_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_refresh_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ext_id_token_lifetime" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  }
}